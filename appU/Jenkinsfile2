pipeline {
  options{
    timeout(time:30, unit: 'MINUTES')
  }
    agent {
      label 'master'
    }
    stages {
      stage ('Checkout') {
        steps {
          deleteDir()
            script {
                    //git credentialsId: 'github', url: 'https://github.com/JohnMops/Mops-DevOps-Life/'
                    checkout([$class: 'GitSCM', branches: [[name: '*/master']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[url: 'https://github.com/JohnMops/Mops-DevOps-Life']]])
                    CurrentVersion = sh script:"git tag | sort -r | head -1", returnStdout: true
                    CurrentVersion = CurrentVersion.trim()
                    nextVersion = CurrentVersion + 1
                    commitIDshort = sh script:"git rev-parse HEAD | cut -c1-10", returnStdout: true
                    BuildVersion = "${CurrentVersion}_${commitIDshort}"
            }
        
        }
      }
      
      stage ('Unit Test') {
        steps {
          script {
          targetIP = input(
                            id: 'userInput', message: 'ip add',
                            parameters: [
                                string(defaultValue: '0.0.0.0',
                                       description: 'ip address',
                                       name: 'IP')])
                                       roleIn = input (
                id: 'userInput', message: 'Choose Role',
                parameters: [choice(name: 'Role', choices: "Docker\nES\nJenkins\nKibana\nMetric\nTerraform\nLogstash\nWeb", description: 'What role do you want to run?')]
)
            dir ('./appU') {
              try {
                            sh 'python ExperimentTests.py'
                        } catch (err) {
                          println("Unit Test failed for ${BuildVersion}")
                            currentBuild.result = 'UNSTABLE'
                        }
              
            }
          }
        }
        post {
                success {
                    dir ('./New-Project') {                   
                    sh "sed -i 's/host/${targetIP}/g' hosts"
                    sh "sed -i 's/host_ip/${targetIP}/g' group_vars/all"
                    sh "sed -i 's/roleIn/${roleIn}/g' playbook.yml"
                    sh "sed -i 's/build/${BuildVersion}/g' group_vars/all"
                    sh 'cat hosts'
                    sh 'cat group_vars/all'
                    sh "ansible-playbook -i hosts -u ubuntu -b  --extra-vars role=${roleIn} --private-key=/var/jenkins_home/ansible/mylkp.pem playbook.yml"
                      
                    }
                }
            }
        }
      
      stage ('Some') {
        steps {
          script {
            sh 'pwd'
          }
        }
      }
      }
    } 
  
 
